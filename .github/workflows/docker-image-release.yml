name: Publish Docker image

on:
  # trigger on release events
  release:
    types: [published]
  # trigger on tags matching version patterns
  push:
    tags:
      - "v*"
  # manual trigger
  workflow_dispatch:
    inputs:
      context:
        description: "manual trigger"
        required: false

jobs:
  push_to_registry:
    name: Push Docker pynoel-gui-app image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: noelmni/pynoel-gui-app
          tags: |
            type=semver,pattern={{version}}
            type=sha,prefix=${{ env.BRANCH_NAME }}-
            type=raw,value=${{ env.BRANCH_NAME }}-latest
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title="noelTexturesPy"
            org.opencontainers.image.description="Dash app to generate textures maps from MRI using Advanced Normalization Tools"
            org.opencontainers.image.vendor="Neuroimaging of Epilepsy Laboratory at McGill University"

      - name: Determine branch name (non-PR events)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Determine branch name (PR events)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Set up Python to build app wheel for Docker image
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel build

      - name: Build Python wheel and upload artifact
        id: wheels
        run: python -m build --wheel --outdir dist/
      - uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist/*.whl

      - name: Build and push Docker image to registry
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
