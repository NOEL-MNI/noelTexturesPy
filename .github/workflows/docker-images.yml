name: Publish Docker image

on:
  push:
    branches:
      - 'master'

jobs:
  push_to_registry:
    name: Push Docker pynoel-gui-app image to Docker Hub
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: noelmni/pynoel-gui-app
          tags: |
            type=semver,pattern={{version}}
            # dynamically set the branch name as a prefix
            type=sha,prefix={{branch}}-
            # dynamically set the branch name
            type=raw,value={{branch}}-latest
            # set the latest branch name
            type=raw,value=latest
          labels: |
            org.opencontainers.image.title="noelTexturesPy"
            org.opencontainers.image.description="Dash app to generate textures maps from MRI using Advanced Normalization Tools"
            org.opencontainers.image.vendor="Neuroimaging of Epilepsy Laboratory at McGill University"    
   
      - name: Get branch name (merge)
        if: github.event_name != 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | tr / -)" >> $GITHUB_ENV

      - name: Get branch name (pull request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: echo "BRANCH_NAME=$(echo ${GITHUB_HEAD_REF} | tr / -)" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}